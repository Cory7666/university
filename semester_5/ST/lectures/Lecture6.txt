Лекция 6. Особенности тестирования объектно-ориентированных систем

	Объекты объединяются не в иерархические структуры, а в сетевые, следственно
восходящее/нисходящее тестирование здесь неприменимо.
	Если исходный код отдельных классов открыт, то применим подход белого ящика.
	Уровни тестирования объектно-ориентированных систем:
1. Тестирование отдельных методов класса.
2. Тестирование отдельных классов. Можно применять подход чёрного ящика.
3. тестирование кластеров объектов.
4. Тестирование системы вцелом. Объектно-ориентированные системы совершенно не
	отличаются от других систем.



Тестирование классов объектов
	Полное тестовое покрытие должно включать в себя следующее:
* раздельное тестирование всех методов объектов;
* проверка всех аттрибутов объекта;
* тестирование всех возможных состояний объекта.
	Наследование классов усложняет разработку тестов. Можно применить понятие
"областей эквивалентности".



Интеграционное тестирование объектно-ориентированных систем
	Специальные способы проведения интеграционных тестов:
1. Тестирование сценариев или вариантов использования. Описывают один режим
	работы системы. При реализации сценария.
2. Тестирование событий.
3. Тестирования взаимодействий между объектами.



Верификация и аттестация программных продуктов
	Верификая и аттестация - процессы, позволяющие проверить соответствие
программного продукта спецификации требований и ожиданий заказчика. Начинаются
на этапе анализа спецификаций и заканчиваются на этапе тестирования.
	Верификация отвечает на вопрос "Правильно ли создана система?", а аттестация -
"Правильно ли система работает?".
	Верификация - проверка на соответствие техническому заданию.
	Могут быть реализованы способами:
1. Инспектирование программного обеспечения.
2. Тестирвоание.
	Инспектирование - статический анализ кода программы. Методы:
* ручной;
* автоматический.
	Тестирование можно разделить на:
* тестирование дефектов;
* статистическое тестирование (направлен на проверку выполнения
	нефункциональных требований).



Инспектирование программного обеспечения
	Процесс инспектирования - процесс анализа кода небольшой группой. В группу
входят:
* автор кода;
* рецензент;
* инспектор;
* координатор.
	Для проведения инспектирвоания необходимо:
* точная требование к реализации;
* необходимость знания стандартов разработки, принятых в команде;
* налические синтаксически корректной, современной версии программы.
	Этапы процесса:
1. Планирование инспектирования координатором.
2. Предварительный просмотр (представление кода разработчиком).
3. Предварительная подготовка.
4. Собрание инспекционной группы (обсуждаются результаты инспектирования).
5. Исправление ошибок (принятие во внимание требований/пожеланий, доработка).
6. Принятие решения о необходимости повторного инспектирования.
	Процесс инспектирования должен занимать не более 2-х часов => инспектированию
должны подвергаться небольшие программные компоненты.



Статический анализ программы
	Статический анализ кода - анализ качества кода специализированными
программами.
	Этапы:
1. Анализ потоков управление (обнаружение циклов программы, точек входа и
	выхода, никогда не используемого кода).
2. Анализ данных (выявление неинициализированных переменных, неиспользуемых
	переменных, условных операторов с избыточными условиями).
3. Анализ интерфейсов (проверка согласованности отдельных частей программы).
4. Анализ потоков данных (анализ зависимости между входными и выходными
	данными).
5. Анализ ветвей программы (анализ путей выполнения программы).
