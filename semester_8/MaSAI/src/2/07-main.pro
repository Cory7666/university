человек('Андреев').
человек('Борисов').
человек('Васильев').
человек('Григорьев').
человек('Данилов').

% Города: Вязьма, Ельни, Гагарино, Ярославль, Ярцев.

согласовать_с_участником('Андреев', [Andr, _, _, Greg, _]) :-
    (Andr = 'Ярославль', Greg \= 'Гагарино');
    (Andr \= 'Ярославль', Greg = 'Гагарино').

согласовать_с_участником('Борисов', [_, Boris, Vas, _, _]) :-
    (Boris = 'Вязьма', Vas \= 'Гагарино');
    (Boris \= 'Вязьма', Vas = 'Гагарино').

согласовать_с_участником('Васильев', [_, Boris, Vas, _, _]) :-
    (Vas = 'Ярославль', Boris \= 'Ельни');
    (Vas \= 'Ярославль', Boris = 'Ельни').

согласовать_с_участником('Григорьев', [_, _, _, Greg, Dan]) :-
    (Greg = 'Гагарино', Dan \= 'Ярцев');
    (Greg \= 'Гагарино', Dan = 'Ярцев').

согласовать_с_участником('Данилов', [Andr, _, _, _, Dan]) :-
    (Dan = 'Ярцев', Andr \= 'Вязьма');
    (Dan \= 'Ярцев', Andr = 'Вязьма').

проверить_список(Stadt) :-
    человек(Man),
    согласовать_с_участником(Man, Stadt).

вставить(X, L1, L2) :- удалить(X, L2, L1).

удалить(X, [X | T], T).
удалить(X, [Y | T1], [Y | T2]) :-
	удалить(X, T1, T2).

генерировать([], []).
генерировать([Stadt | Resident], Out) :-
	генерировать(Resident, Tmp),
	вставить(Stadt, Tmp, Out).

генерировать_готовый_набор(Out) :-
    генерировать(['Вязьма', 'Ельни', 'Гагарино',
    'Ярославль', 'Ярцев'], Out).

запустить :-
    генерировать_готовый_набор(Stadt),
    проверить_список(Stadt),
    writeln(Stadt),
    !.