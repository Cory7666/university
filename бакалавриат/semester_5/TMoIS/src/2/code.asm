mov ax,0255   ; записать в AX значение 255                             ; + 4
inc ax        ; увеличить значение AX на 1                             ; + 2
add ax, alpha ; прибавить к AX значение alpha                          ; + 16
nop           ; ничего не делать в течение цикла                       ; + 1
mov bx,ax     ; записать в BX содержимое AX                            ; + 2
dec bx        ; уменьшить значение в BX на 1                           ; + 2
sub bx, beta  ; вычести из значения в BX значение в beta               ; + 16
mov dx, bx    ; запичать в DX значение в BX                            ; + 2
sub dx,10     ; вычесть из DX число 10                                 ; + 4
xchg ax,dx    ; поменять местами значения регистров AX и DX            ; + 3
push bx       ; переместить в стек значение BX                         ; + 3
push ax       ; переместить в стек значение AX                         ; + 3
pop cx        ; взять значение из стека и поместить в CX               ; + 8
mov si,cx     ; записать в регистр SI значение CX                      ; + 2
mov di,dx     ; записать в DI значение DX                              ; + 2
mov 0150h,cx ; записать содержимое CX в ячейку памяти по адресу 0150h  ; + 8
shl ax,2      ; сдвинуть биты в AX на 2 позиции влево                  ; + 8 + 2 / 2
mov dx, offset hello ; записать в регистр DX значение отступа hello    ; + 4
                     ; от начала сегмента
mov ax,0900h  ; записать в AX число 0900h                              ; + 4
int 21h       ; вызвать прерывание 21h                                 ; + 51
mov ax,4c00h  ; записать в AX число 4c00h                              ; + 4
int 21h       ; вызвать прерывание 21h                                 ; + 51
ret           ; вернуть управление операционной системе

alpha dw 25
beta dw 32
hello db 'Privet kafedra IS!$'
