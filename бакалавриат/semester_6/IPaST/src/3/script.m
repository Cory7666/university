a = [1 0.5]
b = [1 4 3 2 0.5]

x = [1, 2, 3, 4]

[y1, s] = filter(b, a, x)

% Теперь подаем на вход вторую порцию входных значений сигнала и полученное
% ранее внутреннее состояние системы.
x2 = [5 4 3 2];
y2 = filter(b, a, x2, s);
y = [y1 y2]; % объединяем порции выходного сигнала
figure
stem(y); % рисуем график всех значений выходного сигнала
title('Выходной сигнал рекурсивного фильтра');
xlabel('k');
ylabel('y(k)');

% Расчет импульсной характеристики рекурсивного фильтра
h = impz(b, a);
figure
stem(h);
title('Импульсная характеристика рекурсивного фильтра');
xlabel('k');
ylabel('h(k)');

% Расчет переходной характеристики фильтра
g = filter(b, a, ones(1,20))

g2 = stepz(b, a)

figure
stem(g); % Рисуем график
title('Переходная характеристика рекурсивного фильтра');
xlabel('k');
ylabel('g(k)');

% Нули и полюсы фильтра
[b1, a1] = eqtflength(b, a); % Выравниваем длину числителя и знаменателя
[z, p, k] = tf2zp(b1, a1) % Расчет нулей и полюсов

% Рисуем график нулей и полюсов
figure
zplane(z, p)

w = freqspace(2*512); % Формируем вектор частот
K = freqz(b, a, w*pi); % Комплексный коэффициент передачи
K_amp = abs(K); % Расчет АЧХ

% Рисуем график АЧХ
K_amp = 20*log10(K_amp); % Преобразуем АЧХ в децибелы
figure
plot(w, K_amp); % рисуем график АЧХ
title('AЧХ фильтра');
xlabel('Нормализованная частота (x\pi рад/отсчет)');
ylabel('АЧХ фильтра (дБ)');
grid on

% Расчет ФЧХ фильтра
figure
phasez(b, a)

% Расчет фазовой задержки фильтра
figure
phasedelay(b, a)
% Расчет групповой задержки фильтра
figure
grpdelay(b, a)

% Визуализатор фильтров
fvtool(b, a)

% Преобразование фильтра в каскад секций второго порядка
sos = zp2sos(z, p)
